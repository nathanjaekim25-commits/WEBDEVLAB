import streamlit as st
import info
import pandas as pd


# Headphone library

def portaPro(): st.write("➡️ Recommend: Koss Porta Pro")
def xm5(): st.write("➡️ Recommend: Sony WH-1000XM5")
def airpods(): st.write("➡️ Recommend: AirPods (wired budget 300)")
def airpodsMax(): st.write("➡️ Recommend: AirPods Max")
def anandaBT(): st.write("➡️ Recommend: HiFiMAN Ananda BT")
def akg361(): st.write("➡️ Recommend: AKG K361")
def hd400s(): st.write("➡️ Recommend: Sennheiser HD 400S")
def m20x(): st.write("➡️ Recommend: Audio-Technica M20x")
def DT770(): st.write("➡️ Recommend: Beyerdynamic DT770")
def celestee(): st.write("➡️ Recommend: Focal Celestee")
def stellia(): st.write("➡️ Recommend: Focal Stellia")
def akg371(): st.write("➡️ Recommend: AKG K371")
def DT1770Pro(): st.write("➡️ Recommend: Beyerdynamic DT 1770 Pro")
def grado80(): st.write("➡️ Recommend: Grado SR80")
def HD560s(): st.write("➡️ Recommend: Sennheiser HD560S")
def HD600s(): st.write("➡️ Recommend: Sennheiser HD600")
def sundara(): st.write("➡️ Recommend: HiFiMAN Sundara")
def ananda(): st.write("➡️ Recommend: HiFiMAN Ananda")
def focalClear(): st.write("➡️ Recommend: Focal Clear")
def HD800s(): st.write("➡️ Recommend: Sennheiser HD800S")
def z1r(): st.write("➡️ Recommend: Sony MDR-Z1R")
def shangrila(): st.write("➡️ Recommend: HiFiMAN Shangri-La")
def HE1(): st.write("➡️ Recommend: Sennheiser HE-1")



# defines variables to None if there is no user input
if "isBluetooth" not in st.session_state:
    st.session_state.isBluetooth = None
    st.session_state.allAnsIn = "no"
if "isOpen" not in st.session_state:
    st.session_state.isOpen = None
    st.session_state.allAnsIn = "no"
if "bassLiking" not in st.session_state:
    st.session_state.bassLiking = None
    st.session_state.allAnsIn = "no"
if "genrePref" not in st.session_state:
    st.session_state.genrePref = []
if "budget" not in st.session_state:
    st.session_state.budget = None
    st.session_state.allAnsIn = "no"
else:
    st.session_state.allAnsIn = "yes"

# Verification of the inputs into answer bank
def verifyAns():
    if "isBluetooth" not in st.session_state:
        st.session_state.isBluetooth = None
        st.session_state.allAnsIn = "no"
    if "isOpen" not in st.session_state:
        st.session_state.isOpen = None
        st.session_state.allAnsIn = "no"
    if "bassLiking" not in st.session_state:
        st.session_state.bassLiking = None
        st.session_state.allAnsIn = "no"
    if "genrePref" not in st.session_state:
        st.session_state.genrePref = []
    if "budget" not in st.session_state:
        st.session_state.budget = None
        st.session_state.allAnsIn = "no"
    else:
        st.session_state.allAnsIn = "yes"


    
#Question answer bank
def answerBank(question, userIn):
    if question == 1:
        st.session_state.isBluetooth = userIn
    if question == 2:
        st.session_state.isOpen = userIn
    if question == 3:
        st.session_state.bassLiking = userIn
    if question == 4:
        st.session_state.genrePref = userIn
    if question == 5:
        if userIn == "GT 4-year tuition":
            st.session_state.budget = 200000
        else:
            st.session_state.budget = int(userIn.replace("$", ""))

#code for intro at the bottom to define question functions first

# loop to continue displaying questions while being answered


#Introduction to quiz
def quizIntro():
    st.header("**Welcome to the Headphone Quiz**")
    st.write("Answer five questions. Based on your answers, I will pick you a headphone with tuning that most aligns with your audio and music preferences.")
    st.write("---")

quizIntro()


            
#Question 1
def question1():
    st.image(info.btImage)
    st.subheader("**Question 1**")
    st.write("""Do you want a bluetooth or wired headphone? Bluetooth headphones are more convenient but tend to sound worse than wired headphones.""")
    c1, c2, c3 = st.columns(3)
    if c1.button("Bluetooth", width=800): #NEW
        st.markdown("You selected Bluetooth")
        answerBank(1, True)
    if c3.button("Wired", width=800):
        st.markdown("You selected wired")
        answerBank(1, False)
    st.write("---")

question1()

#Question 2
def question2():
    st.image(info.openbackImage)
    st.subheader("**Question 2**")
    st.write("Do you want an open back or closed back headphone?")
    expander = st.expander("More info about open back")
    expander.write("Open back headphones do not isolate the user from the environment noise. This leads to greater soundstage and sound quality but can be inconvenient to use in public spaces.")
    c1, c2, c3 = st.columns(3)
    if c1.button("Open Back", width=800): #NEW
        st.markdown("You selected open")
        answerBank(2, True)
    if c3.button("Closed Back", width=800):
        st.markdown("You selected closed")
        answerBank(2, False)
    st.write("---")

question2()

#Question 3
def question3():
    st.subheader("**Question 3**")
    st.write("Do you like loud bass? Answer on the scale of 1 to 10 (1 being not at all and 10 being a lot).")
    c1, c2, c3, c4, c5, c6 = st.columns(6)
    c1.write("Not very much")
    c6.write("A lot")
    bassAmount = st.slider("",0, 10, 5) #NEW
    st.write(f"You rate bass {bassAmount}/10")
    answerBank(3, bassAmount)
    st.write("---")

question3()


#Question 4
def question4():
    st.subheader("**Question 4**")
    st.write("What is your favorite genre of music? Please pick your **best** option or multiple")
    genreOptions = st.multiselect(
    "",
    ["Classical", "Rock", "Pop", "Jazz", "Electronic", "Singer Songwriter", "R&B", "Rap"],
    default=[]) #NEW
    selectionList = ""
    for pos in range(len(genreOptions)):
        if pos < len(genreOptions) - 1:
            selectionList += genreOptions[pos] + ", "
        if pos == len(genreOptions) - 1:
            selectionList += genreOptions[pos]
    st.write("You selected:", selectionList)
    st.write("---")
    answerBank(4, genreOptions)

question4()


#Question 5
def question5():
    st.image(info.money)
    st.subheader("**Question 5**")
    st.write("What is your budget?") #NEW v
    budgetAmount = st.select_slider("",
        ["$100", "$300", "$1000", "$2500", "GT 4-year tuition"],
        )
    st.write("Your budget is: " + budgetAmount)
    answerBank(5, budgetAmount)
    st.write("---")
    
question5()



#Answer Logic and generation
def generateAnswer():
    if st.session_state.isBluetooth:
        if st.session_state.isOpen and st.session_state.budget == 100:
            portaPro()
        elif not st.session_state.isOpen and st.session_state.bassLiking > 5 and st.session_state.budget >= 1000:
            xm5()
        elif not st.session_state.isOpen and st.session_state.budget == 300:
            airpods()
        elif not st.session_state.isOpen and st.session_state.budget >= 1000:
            airpodsMax()
        elif st.session_state.isOpen:
            anandaBT()
        elif not st.session_state.isOpen:
            akg361()
        else:
            st.write("Sorry, we currently do not have any recommendations for you")
    elif not st.session_state.isBluetooth:
        if not st.session_state.isOpen:
            if st.session_state.budget == 100 and ("Rock" in st.session_state.genrePref) or ("Rap" in st.session_state.genrePref):
                hd400s()
            elif st.session_state.budget == 100:
                m20x()
            elif st.session_state.budget == 300:
                DT770()
            elif st.session_state.bassLiking <= 5:
                celestee()
            elif ("Classical" in st.session_state.genrePref) or ("Singer Songwriter" in st.session_state.genrePref) and st.session_state.budget >= 2500:
                stellia()
            elif st.session_state.bassLiking > 5 and "Electronic" or "Pop" or "R&B" in st.session_state.genrePref:
                akg371()
            else:
                DT1770Pro()
        elif isOpen:
            if st.session_state.budget == 100 and "Rock" or "Pop" in st.session_state.genrePref:
                grado80()
            elif st.session_state.budget == 100:
                portaPro()
            elif ("Classical" in st.session_state.genrePref) or ("Singer Songwriter" in st.session_state.genrePref) and st.session_state.budget <= 1000:
                if st.session_state.budget == 300:
                    HD560s()
                if st.session_state.budget == 1000:
                    HD600s()
            elif st.session_state.bassLiking > 5 or ("Rap" in st.session_state.genrePref) or ("R&B" in st.session_state.genrePref):
                if st.session_state.budget == 300:
                    sundara()
                if st.session_state.budget == 1000:
                    ananda()
            elif st.session_state.budget == 1000:
                focalClear()
            elif st.session_state.budget == 2500 and st.session_state.bassLiking <= 4:
                HD800s()
            elif st.session_state.bassLiking > 4 and st.session_state.budget == 2500:
                z1r()
            elif st.session_state.budget == 10000:
                if (("Rap" in st.session_state.genrePref) or ("Rock" in st.session_state.genrePref) and st.session_state.bassLiking >= 8):
                    shangrila()
                else:
                    HE1()
            else:
                st.write("Sorry, we currently do not have any recommendations for you")


    # Response summary
    st.write("**Response Summary:**")
    #Bluetooth Pref
    if st.session_state.isBluetooth == True:
        bluetoothResp = "Bluetooth"
    elif st.session_state.isBluetooth == False:
        bluetoothResp = "Non-Bluetooth"
    else:
        bluetoothResp = "No Preference"
    st.write(f"Bluetooth Preference: {bluetoothResp}")
    

    #Open back Pref
    if st.session_state.isOpen == True:
        openResp = "Open Back"
    elif st.session_state.isOpen == False:
        openResp = "Closed Back"
    else:
        openResp = "No Preference"
    st.write(f"Shell Preference: {openResp}")

    # Genre pref
    genreList = ""
    if st.session_state.genrePref == []:
        st.write(f"Genre Preference: No Preference")
    else:   
        for i in range(len(st.session_state.genrePref)):
            if i != len(st.session_state.genrePref) - 1:
                genreList += st.session_state.genrePref[i] + ", "
            else:
                genreList += st.session_state.genrePref[i]
        st.write(f"Genre Preference(s): {genreList}")

    # Bass pref
    bassPref = st.session_state.bassLiking
    st.write(f"Bass Preference: {bassPref}/10")

    # budget pref
    budgetPref = st.session_state.budget
    st.write(f"Budget: (less than) ${budgetPref}")
      
            
#Answer submission button
def answerSubmit():
    st.write("Press the submit button to find your headphone.")
    st.write("Please note: You must answer **ALL** the questions before submitting.")
    verifyAns()
    c1, c2, c3 = st.columns(3)
    if c2.button("Submit Responses", width=1000, type="primary"):
        if st.session_state.isBluetooth == None or st.session_state.isOpen == None or st.session_state.genrePref == []:
            st.write("**Please answer ALL the questions! (default for Bluetooth and open back are 'None')**")
        elif st.session_state.allAnsIn == "yes":
            generateAnswer()
            st.balloons() #NEW
        else:
            st.write("ERROR")

answerSubmit()

    
